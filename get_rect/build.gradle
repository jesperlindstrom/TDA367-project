buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "get_rect"
        gdxVersion = '1.9.2'
        roboVMVersion = '1.12.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"

    compileJava {
        sourceCompatibility = '1.8'
    }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "jdepend"
    apply plugin: "findbugs"

    compileJava {
        sourceCompatibility = '1.8'
    }

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        compile "com.google.inject:guice:4.0"
        compile "com.google.code.gson:gson:2.6.2"
        testCompile "junit:junit:4.12"
        testCompile "org.mockito:mockito-core:1.+"
    }

    jacocoTestReport{
        additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
        reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/reports/jacoco/html"
        }
        executionData = files("build/jacoco/test.exec")
    }


    jdependMain {
        reports {
            xml.enabled false
            text.enabled true
        }
    }

    findbugs {
        ignoreFailures = true
        reportsDir = file("$project.buildDir/findbugsReports")
        effort = "max"
        reportLevel = "high"
        excludeFilter = file("$rootProject.projectDir/findbugs-exclude.xml")
       }


    test {

        finalizedBy jacocoTestReport
    }
}

tasks.eclipse.doLast {
    delete ".project"
}